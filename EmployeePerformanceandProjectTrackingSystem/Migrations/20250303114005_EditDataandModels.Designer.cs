// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeePerformanceandProjectTrackingSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250303114005_EditDataandModels")]
    partial class EditDataandModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "HR"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "IT"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Sales"
                        });
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DepartmentId = 1,
                            EmployeeName = "John Doe",
                            Performance = 85,
                            Salary = 80000m
                        },
                        new
                        {
                            EmployeeId = 2,
                            DepartmentId = 2,
                            EmployeeName = "Jane Smith",
                            Performance = 90,
                            Salary = 75000m
                        },
                        new
                        {
                            EmployeeId = 3,
                            DepartmentId = 3,
                            EmployeeName = "Bob Johnson",
                            Performance = 78,
                            Salary = 65000m
                        },
                        new
                        {
                            EmployeeId = 4,
                            DepartmentId = 1,
                            EmployeeName = "Alice Williams",
                            Performance = 88,
                            Salary = 70000m
                        },
                        new
                        {
                            EmployeeId = 5,
                            DepartmentId = 2,
                            EmployeeName = "Charlie Brown",
                            Performance = 95,
                            Salary = 90000m
                        },
                        new
                        {
                            EmployeeId = 6,
                            DepartmentId = 3,
                            EmployeeName = "Emily Davis",
                            Performance = 80,
                            Salary = 72000m
                        });
                });

            modelBuilder.Entity("EmployeeProject", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProjects");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            ProjectId = 1
                        },
                        new
                        {
                            EmployeeId = 1,
                            ProjectId = 2
                        },
                        new
                        {
                            EmployeeId = 2,
                            ProjectId = 2
                        },
                        new
                        {
                            EmployeeId = 2,
                            ProjectId = 3
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 3
                        },
                        new
                        {
                            EmployeeId = 4,
                            ProjectId = 2
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 3
                        },
                        new
                        {
                            EmployeeId = 6,
                            ProjectId = 1
                        });
                });

            modelBuilder.Entity("Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Budget = 500000.0,
                            Deadline = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Project Alpha"
                        },
                        new
                        {
                            ProjectId = 2,
                            Budget = 300000.0,
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Project Beta"
                        },
                        new
                        {
                            ProjectId = 3,
                            Budget = 400000.0,
                            Deadline = new DateTime(2025, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Project Gamma"
                        },
                        new
                        {
                            ProjectId = 4,
                            Budget = 350000.0,
                            Deadline = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Project AI"
                        },
                        new
                        {
                            ProjectId = 5,
                            Budget = 200000.0,
                            Deadline = new DateTime(2022, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Project Sigma"
                        });
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.HasOne("Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeProject", b =>
                {
                    b.HasOne("Employee", "Employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project", "Project")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("Project", b =>
                {
                    b.Navigation("EmployeeProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
